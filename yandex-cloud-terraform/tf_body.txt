
    skip_region_validation      = true
    skip_credentials_validation = true
  }
}



provider "yandex" {
  token     = "${ var.oauth }"
  cloud_id  = "${ var.cloud }"
  folder_id = "${ var.folder }"
  zone      = "ru-central1-a"
}

resource "yandex_compute_instance" "gw" {
  name = "gw"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8f30hur3255mjfi3hq"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet-1.id
    nat       = true
  }

  metadata = {
    user-data = "${file("meta.txt")}"
  }
}

resource "yandex_compute_instance" "docker" {
  count = local.countss
  name = "docker-${count.index}"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8f30hur3255mjfi3hq"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet-1.id
    nat       = false
  }

  metadata = {
    user-data = "${file("meta.txt")}"
  }
}

resource "yandex_compute_instance" "nfs" {
  name = "nfs"

  resources {
    cores  = 2
    memory = 2
  }

  boot_disk {
    initialize_params {
      image_id = "fd8f30hur3255mjfi3hq"
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet-1.id
    nat       = false
  }

  metadata = {
    user-data = "${file("meta.txt")}"
  }
}


resource "yandex_vpc_network" "network-1" {
  name = "network1"
}

resource "yandex_vpc_subnet" "subnet-1" {
  name           = "subnet1"
  zone           = "ru-central1-a"
  network_id     = yandex_vpc_network.network-1.id
  v4_cidr_blocks = ["192.168.10.0/24"]
}


output "external_ip_address_gw" {
  value = yandex_compute_instance.gw.network_interface.0.nat_ip_address
}

provisioner "remote-exec" {
    inline = ["sudo apt update"]

    connection {
      type        = "ssh"
      user        = "banlex"
    }
  }

  provisioner "local-exec" {
    command = "echo HostName ${self.public_ip} >> ../ops/ssh-config"
    command = "echo User banlex >> ../ops/ssh-config"
  }
